[global]
  ### Display ###

  # Which monitor should the notifications be displayed on
  monitor = 0

  # Display notification on focused monitor. Possible modes are:
  # mouse: follow mouse pointer
  # keyboard: follow window with keyboard focus
  # none: don't follow anything
  #
  # "keyboard" needss a window manager that exports the
  # _NET_ACTIVE_WINDOW property
  # This should be the case for almost all modern window managers.
  #
  # If this option is set to mouse or keyboard, the monitor option
  # will be ignored.
  follow = mouse

  # The geometry of the window:
  # [{width}]x{height}[+/-{x}+/-{y}]
  # The geometry of the message window.
  # The height is measured in number of notificatoins, everything else
  # in pixels. If the width is omitted but the height is given
  # ("-geometry x2"), the message window expands over the whole screen
  # (dmenu-like). If width is 0, the window expands to the longest message 
  # displayed. A positive x is measured from ttteh left, a negative from 
  # the right side of the screen. Y is measured from the top and down 
  # respectively.
  # The width can be negative. In this case, the actual width is the screen 
  # width minus the width defined in wiithin the geometry option.
  geometry = "0x0-30+20"

  width = 400

  # Alignment of text. Possible values are 'left', 'center' and 'right'
  alignment = center

  # Ignore newlines ']n' in notifications.
  ignore_newline = no

  # Stack together notifications with the same content
  stack_duplicates = true

  # Hide the count of stacked notifications with the same content
  hide_duplicate_count = false

  # Display indicators for URLs (U) and actions (A).
  show_indicators = true
  #

  # Show how many messages are currently hidden (because of geometry)
  indicate_hidden = yes

  # Shrink window if it's smaller than the width. Will be ignored if
  # width is 0.
  shrink = no

  # The transparency of th ewindow. Range: [0; 100].
  # Ths option will only work if a compositing window manager is 
  # present (e.g. xcommpmgr, compiz, etc).
  transparency = 0

  # Draw a line of "separator_height" pixel height between two 
  # notifications.
  # Set to 0 to disable.
  separator_height = 2

  # Padding between text and separator.
  padding = 8

  # horizontal padding
  horizontal_padding = 8

  # Defines width in pixels of frame around the notification window.
  # Set to 0 to disable.
  frame_width = 3

  # Defines color of the frame around the notification window.
  highlight = "#aaaaaa"
  frame_color = "#f3a262"

  # Define round corners for notification window
  corner_radius = 5

  # dmenu path.
  dmenu = /usr/bin/dmenu -p dunst:

  # Browser for opening urls in context menu
  browser = /usr/bin/brave

  # Define the title of the windows spawned by dunst
  title = Dunst

  # Define the class of the windows spawned by dunst
  class = Dunst

  # Display notification on startup. This is mainly for error detection, 
  # since dbus (re-) starts dunst automatically after a crash
  startup_notification = true

  # Manage dunst's desire for talking
  # Can be one of the following values:
  #   crit: Critical features. Dunst aborts
  #   warn: Only non-fatal warnings
  #   mesg: Important messages
  #   info: all unimportant stuff
  #   debug: all less than unimportant stuff
  verbosity = mesg

  # Define a color for the separator
  # possible values are:
  #  * auto: dunst tries to find a color fitting to the background;
  #  * foreground: use the same color as the foreground;
  #  * frame: use the same color as the frame;
  #  * anything else will be interpreted as a X color.
  separator_color = auto

  # Sort messages by urgency
  sort = yes

  # Don't remove messages, if the user is iddle (no mouse or keyboard input)
  # for longer than idle_threshold seconds.
  # Set to 0 to disable.
  # A client can set the 'transient' hint to bypass this. See the rules
  # section for how to disable this if necessary.
  idle_threshold = 120

  ### Text ###
  # font = 'Fira Code iScript 10'
  font = Iosevka Custom 10

  # The spacing between lines. If the height is smaler than the
  # font height, it will get raised to the font height.
  line_height = 0

  # Allow a small subset of html markup in notifications:
  markup = full

  # The format of the message. Possible values are:
  #   %a  appname
  #   %s  summary
  #   %b  body
  #   %i  icon
  #   %I  icon (from the same directory as the notification)
  #   %p  progress value
  #   %P  progress value (marquee mode)
  format = "<b>%s %p</b>\n%b"

  word_wrap = yes

  ### mouse

  # Defines action of mouse event
  # Possible values are:
  # * none: Don't do anything.
  # * do_action: If the notification has exactly one action, or one is marked as default,
  #              invoke it. If there are multiple and no default, open the context menu.
  # * close_current: Close current notification.
  # * close_all: Close all notifications.
  mouse_left_click = do_action
  mouse_middle_click = close_current
  mouse_right_click = close_all

  icon_position = left


[urgency_low]
    # IMPORTANT: colors have to be defined in quotation marks.
    # Otherwise the "#" and following would be interpreted as a comment.
    foreground = "#d4edda"
    background = "#222222"
    frame_color = "#155724"
    icon = /home/charapyge/Pictures/icons/bells.png
    timeout = 10

[urgency_normal]
    foreground = "#cce5ff"
    background = "#222222"
    frame_color = "#004085"
    icon = /home/charapyge/Pictures/icons/bells.png
    timeout = 10

[urgency_critical]
    foreground = "#f8d7da"
    background = "#222222"
    frame_color = "#721c24"
    icon = /home/charapyge/Pictures/icons/danger.png
    timeout = 10

